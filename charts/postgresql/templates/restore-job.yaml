{{- if .Values.restore.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "postgresql.fullname" . }}-restore"
  labels:
    {{- include "postgresql.labels" (dict "context" . "component" "restore") | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- include "postgresql.labels" (dict "context" . "component" "restore") | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-db
          image: {{ include "postgresql.image" . }}
          imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
          command: ['sh', '-c', 'until pg_isready -h $PGHOST -U $PGUSER; do echo waiting; sleep 2; done']
          env:
            - name: PGHOST
              value: {{ include "postgresql.fullname" . | quote }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                    name: {{ include "postgresql.secretName" . }}
                    key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                    name: {{ include "postgresql.secretName" .}}
                    key: password
      containers:
        - name: pgrestore
          image: {{ include "postgresql.image" . }}
          imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.secretName" . }}
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.secretName" . }}
                  key: password
            - name: PGHOST
              value: {{ include "postgresql.clusterName" . | quote }}
            - name: PGDATABASE
              value: {{ keys .Values.databases | first | quote }}
            - name: BACKUP_DIR
              value: {{ required "A mount path must be provided for the restore job!" .Values.backup.mountPath | quote }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "$PGHOST:5432:*:$PGUSER:$PGPASSWORD" > ~/.pgpass
              chmod 600 ~/.pgpass
              psql "postgresql://$PGUSER@$PGHOST:5432/$PGDATABASE?sslmode=require" --file="$(ls $BACKUP_DIR/pg_dump-*.sql | sort | tail -n 1)"
          volumeMounts:
            - name: backup
              mountPath: {{ .Values.backup.mountPath }}
      volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: {{ required "The name of a PersistentVolumeClaim must be provided to pull backup from!" .Values.restore.dataSource.claimName }}
      restartPolicy: OnFailure
{{- end -}}
