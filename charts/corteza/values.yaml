# Default values for corteza.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  domain: &domain ""
  storageClass: ""
  insecure: true

server:
  environment: development
  name: server
  nameOverride: ""
  auth:
    development: "true"
  webConsole:
    enabled: "true"
  apiGateway:
    profiler:
      global: "true"
  image:
    repository: cortezaproject/corteza
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2023.9.7"
  service:
    type: ClusterIP
    port: 80
    containerPort: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  ingress:
    enabled: false
    # Value can be either regular or gcp
    controller: regular
    className: ""
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: *domain
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: orca-tls
    #    hosts:
    #      - *domain
    gcp:
      backendConfig: {}
      frontendConfig: {}
      managedCertificate:
        create: true
        extraDomains: []
  assets:
    path: ""
    auth:
      path: ""
  locale:
    enabled: false
    languages: ""
    enableDevelopmentMode: true
    path: "/mnt/corteza/corteza-locale/"
  log:
    debug: "true"
    level: debug
    stacktraceLevel: error
    includeCaller: "false"
    # https://docs.cortezaproject.org/corteza-docs/2023.9/devops-guide/references/configuration/server.html#_log_filter
    filter: null
    components:
      http:
        request: false
        response: false
      rbac: false
      locale: false
      auth: false
      actionLog:
        enabled: false
        debug: false
        workflowFunctions: false
      apiGateway:
        enabled: false
        requestBody: false
        proxy:
          debug: false
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  # replicaCount is only used when autoscaling is not enabled
  replicaCount: 1
  extraEnv: {}
  initContainers: []
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

corredor:
  enabled: false
  name: corredor
  nameOverride: ""
  image:
    repository: cortezaproject/corteza-server-corredor
    tag: "2023.9.2"
    imagePullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
    containerPort: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  # replicaCount is only used when autoscaling is not enabled
  replicaCount: 1
  initContainers: []
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: "corteza"
    password: "corteza"
    database: "corteza"
  architecture: standalone
  global:
    postgresql:
      service:
        ports:
          postgresql: "5432"

externalDatabase:
  enabled: false
  existingSecret: ""
  existingSecretPasswordKey: ""
